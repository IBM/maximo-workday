$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: minute
                  value: 1
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
      account-name: Account 1
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: Integrations___Get_Integration_Events
      connector-type: workday
      account-name: Account 9
      actions:
        Get_Integration_Events: {}
    action-interface-2:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
      account-name: Account 1
    action-interface-3:
      type: api-action
      business-object: mxapiperuser
      connector-type: maximo
      account-name: Account 2
      actions:
        UPSERTWITHWHERE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - custom-action:
              name: Workday Get Integration Events
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              action: Get_Integration_Events
              map:
                mappings:
                  - Request_Criteria:
                      mappings:
                        - Integration_System_Reference:
                            mappings:
                              - ID__NORMALIZED:
                                  mappings:
                                    - Integration_System_ID:
                                        template: >-
                                          INT_STD_MaximoPersonSyncCollection/INT_STD_MaximoPersonSync/StartHere
                        - Sent_After___Date:
                            template: '2020-09-18T04:00:51.046-07:00'
                  - Response_Filter:
                      mappings:
                        - Count:
                            expression: '10'
                        - Page:
                            expression: '1'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: >-
                  $WorkdayGetIntegrationEvents.Response_Data.Integration_Event.Background_Process_Instance_Data.Output_Document_Data 
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
              mode: sequential
              continue-on-error: true
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      WorkersFound:
                        type: array
                        items:
                          type: object
                          properties: {}
                mappings: []
              display-name: Workday Output_Document_Data
    assembly-2:
      assembly:
        execute:
          - logging:
              name: Log 2
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        Log 2
                        {{$Foreachitem.Integration_Repository_Document_Data."$attributes".Document_ID}}
          - if:
              name: If 2
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: WorkdayGetIntegrationEvents
                  $ref: >-
                    #/node-output/Workday Get Integration
                    Events/response/payload
              branch:
                - condition:
                    '{{$Foreachitem.Integration_Repository_Document_Data."$attributes".File_Name}}': Worker.json
                  execute:
                    - logging:
                        name: Log 5
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                          mappings:
                            - logLevel:
                                template: Info
                            - logMessage:
                                template: >-
                                  Log 5 URL Plus Document ID 
                                  https://wd2-impl-services1.workday.com/ccx/cc-blobitory/ibmsrv_dpt5/{{$Foreachitem.Integration_Repository_Document_Data."$attributes".Document_ID}}
                    - custom-action:
                        name: HTTP Invoke method
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        action: INVOKE
                        map:
                          mappings:
                            - method:
                                template: GET
                            - url:
                                template: >-
                                  https://wd2-impl-services1.workday.com/ccx/cc-blobitory/ibmsrv_dpt5/{{$Foreachitem.Integration_Repository_Document_Data."$attributes".Document_ID}}
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                    - logging:
                        name: Log 3
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                          mappings:
                            - logLevel:
                                template: Info
                            - logMessage:
                                template: 'Log 3 {{$HTTPInvokemethod.responseBody}}'
                          customSchemas:
                            properties.`customMessages`:
                              type: object
                              properties:
                                Log3:
                                  type: string
                    - parse:
                        name: JSON Parser Parse 2
                        parse-format: json
                        source:
                          template: '{{$HTTPInvokemethod.responseBody}}'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                        sample-data: |-
                          {"worker": [{
                                "employeeID": 21005,
                                "firstName": "Teresa",
                                "lastName": "Serrano",
                                "gender": "Female",
                                "workAddressLine1": "1155 Avenue of the Americas",
                                "workMunicipality": "New York",
                                "workState": "New York",
                                "workPostalCode": "10036",
                                "workCountry": "10036",
                                "workPhone": "",
                                "workEmail": "tserrano@workday.net",
                                "employeeStatus": "Active",
                                "hireDate": "2000-01-01",
                                "rehire": "false",
                                "businessTitle": "Controller",
                                "scheduledWeeklyHours": 40,
                                "company": "GMS_USA_company",
                                "jobProfile": "35000",
                                "jobFamily": "FA-Management",
                                "managementLevel": "4_Vice_President",
                                "businessSiteName": "New York",
                                "businessSite": "New_York_site",
                                "businessSiteAddressLine1": "1155 Avenue of the Americas",
                                "businessSiteMunicipality": "New York",
                                "businessSiteRegion": "New York",
                                "businessSitePostalCode": "10036",
                                "businessSiteCountry": "US",
                                "supervisorID": 21430,
                                "qualifications":       {
                                   "compentencyAchievement":          [
                                                  {
                                         "compentencyName": "Building_Talent",
                                         "competencyLevel": "Proficient"
                                      },
                                                  {
                                         "compentencyName": "Collaborating_Across_Boundaries",
                                         "competencyLevel": "Advanced"
                                      },
                                                  {
                                         "compentencyName": "Core_Values",
                                         "competencyLevel": "Advanced"
                                      },
                                                  {
                                         "compentencyName": "I0480",
                                         "competencyLevel": ""
                                      },
                                                  {
                                         "compentencyName": "I0750",
                                         "competencyLevel": ""
                                      },
                                                  {
                                         "compentencyName": "I1000",
                                         "competencyLevel": ""
                                      },
                                                  {
                                         "compentencyName": "L0000",
                                         "competencyLevel": ""
                                      },
                                                  {
                                         "compentencyName": "M1010",
                                         "competencyLevel": "Advanced"
                                      },
                                                  {
                                         "compentencyName": "Organization",
                                         "competencyLevel": "Proficient"
                                      },
                                                  {
                                         "compentencyName": "Setting_Direction",
                                         "competencyLevel": "Advanced"
                                      }
                                   ],
                                   "certificationAchievement": [         {
                                      "certificationName": "Certified Public Accountant (CPA)",
                                      "certificationIssuer": "American Institute CPAs",
                                      "expirationDate": "2020-12-31"
                                   }],
                                   "training": [         {
                                      "trainingName": "Dale Carnegie Leadership Advantage",
                                      "trainingType": "Classroom",
                                      "completionDate": "2006-08-15"
                                   }],
                                   "education": [         {
                                      "institutionName": "University of Pennsylvania",
                                      "institutionLocation": "",
                                      "instituitionCountry": "",
                                      "degree": "MBA",
                                      "fieldOfStudy": "300.4",
                                      "highestLevelofEducation": "true"
                                   }]
                                }
                             }
                                      ]}
                        output-schema:
                          $schema: 'http://json-schema.org/draft-04/schema#'
                          type: object
                          properties:
                            worker:
                              type: array
                              items:
                                type: object
                                properties:
                                  employeeID:
                                    type: number
                                  firstName:
                                    type: string
                                  lastName:
                                    type: string
                                  gender:
                                    type: string
                                  workAddressLine1:
                                    type: string
                                  workMunicipality:
                                    type: string
                                  workState:
                                    type: string
                                  workPostalCode:
                                    type: string
                                  workCountry:
                                    type: string
                                  workPhone:
                                    type: string
                                  workEmail:
                                    type: string
                                  employeeStatus:
                                    type: string
                                  hireDate:
                                    type: string
                                  rehire:
                                    type: string
                                  businessTitle:
                                    type: string
                                  scheduledWeeklyHours:
                                    type: number
                                  company:
                                    type: string
                                  jobProfile:
                                    type: string
                                  jobFamily:
                                    type: string
                                  managementLevel:
                                    type: string
                                  businessSiteName:
                                    type: string
                                  businessSite:
                                    type: string
                                  businessSiteAddressLine1:
                                    type: string
                                  businessSiteMunicipality:
                                    type: string
                                  businessSiteRegion:
                                    type: string
                                  businessSitePostalCode:
                                    type: string
                                  businessSiteCountry:
                                    type: string
                                  supervisorID:
                                    type: number
                                  qualifications:
                                    type: object
                                    properties:
                                      compentencyAchievement:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            compentencyName:
                                              type: string
                                            competencyLevel:
                                              type: string
                                      certificationAchievement:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            certificationName:
                                              type: string
                                            certificationIssuer:
                                              type: string
                                            expirationDate:
                                              type: string
                                      training:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            trainingName:
                                              type: string
                                            trainingType:
                                              type: string
                                            completionDate:
                                              type: string
                                      education:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            institutionName:
                                              type: string
                                            institutionLocation:
                                              type: string
                                            instituitionCountry:
                                              type: string
                                            degree:
                                              type: string
                                            fieldOfStudy:
                                              type: string
                                            highestLevelofEducation:
                                              type: string
                          title: Parsed JSON
                    - for-each:
                        name: For each 2
                        assembly:
                          $ref: '#/integration/assemblies/assembly-3'
                        source:
                          expression: >-
                            $JSONParserParse2.worker.employeeID$JSONParserParse2.worker  
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: JSONParserParse2
                              $ref: >-
                                #/block/If 2/node-output/JSON Parser Parse
                                2/response/payload
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                        mode: sequential
                        continue-on-error: true
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreach2item
                              $ref: '#/block/For each 2/current-item'
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: Setvariable
                              $ref: >-
                                #/block/For each 2/node-output/Set
                                variable/response/payload
                            - variable: IBMMaximoUpdateorcreateuser
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create user/response/payload
                            - variable: IBMMaximoUpdateorcreateuserMetadata
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create user/response
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: JSONParserParse2
                              $ref: >-
                                #/block/If 2/node-output/JSON Parser Parse
                                2/response/payload
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                          customSchemas:
                            properties.`output`:
                              type: object
                              properties:
                                Workers_created:
                                  type: array
                                  items:
                                    type: object
                                    properties: {}
                          mappings:
                            - output:
                                mappings:
                                  - Workers_created:
                                      expression: >-
                                        $append($Setvariable.variable.worker,
                                        [])
              else:
                execute:
                  - logging:
                      name: Log 4
                      map:
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Foreachitem
                            $ref: '#/block/For each/current-item'
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: WorkdayGetIntegrationEvents
                            $ref: >-
                              #/node-output/Workday Get Integration
                              Events/response/payload
                        mappings:
                          - logLevel:
                              template: Info
                          - logMessage:
                              template: >-
                                Log 4
                                Filename={{$Foreachitem.Integration_Repository_Document_Data."$attributes".File_Name}}
              output-schema: {}
    assembly-3:
      assembly:
        execute:
          - set-variable:
              name: Set variable
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      worker:
                        type: object
                        properties:
                          employee_id:
                            type: number
                          first_name:
                            type: string
                          last_name:
                            type: string
                mappings:
                  - variable:
                      mappings:
                        - worker:
                            mappings:
                              - employee_id:
                                  expression: '$Foreach2item.employeeID '
                              - first_name:
                                  template: '{{$Foreach2item.firstName}}'
                              - last_name:
                                  template: '{{$Foreach2item.lastName}}'
          - upsert-action:
              name: IBM Maximo Update or create user
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              map:
                mappings:
                  - firstname:
                      template: '{{$Setvariable.variable.worker.first_name}}'
                  - lastname:
                      template: '{{$Setvariable.variable.worker.last_name}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
              filter:
                where:
                  personid: '{{$Setvariable.variable.worker.employee_id}}'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
          - logging:
              name: Log
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: IBMMaximoUpdateorcreateuser
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response/payload
                  - variable: IBMMaximoUpdateorcreateuserMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: '{{$IBMMaximoUpdateorcreateuserMetadata}}'
  name: GetIntegrationEventsCF
models: {}
