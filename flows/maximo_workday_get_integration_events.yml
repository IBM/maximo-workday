$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      connector-type: streaming-connector-scheduler
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                interval:
                  unit: minute
                  value: 1
                  runOnceOncheck: true
                  days:
                    - MON
                    - TUE
                    - WED
                    - THU
                    - FRI
                    - SAT
                    - SUN
                  timeZone: UTC
      account-name: Account 1
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: Integrations___Get_Integration_Events
      connector-type: workday
      account-name: Account 1
      actions:
        Get_Integration_Events: {}
    action-interface-2:
      type: api-action
      business-object: request
      connector-type: http
      actions:
        INVOKE: {}
      account-name: Account 1
    action-interface-3:
      type: api-action
      business-object: mxapiperuser
      connector-type: maximo
      account-name: Account 1
      actions:
        UPSERTWITHWHERE: {}
    action-interface-4:
      type: api-action
      business-object: mxapilabor
      connector-type: maximo
      account-name: Account 1
      actions:
        UPSERTWITHWHERE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - custom-action:
              name: Workday Get Integration Events
              target:
                $ref: '#/integration/action-interfaces/action-interface-1'
              action: Get_Integration_Events
              map:
                mappings:
                  - Request_Criteria:
                      mappings:
                        - Integration_System_Reference:
                            mappings:
                              - ID__NORMALIZED:
                                  mappings:
                                    - Integration_System_ID:
                                        template: >-
                                          INT_STD_MaximoPersonSyncCollection/INT_STD_MaximoPersonSync/StartHere
                        - Sent_After___Date:
                            template: '2020-10-05T08:40:00.000-07:00'
                  - Response_Filter:
                      mappings:
                        - Count:
                            expression: '10'
                        - Page:
                            expression: '1'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
          - parse:
              name: JSON Parser Parse
              parse-format: json
              source:
                template: '{{$WorkdayGetIntegrationEvents.Response_Data}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
              sample-data: |-
                {
                    "Integration_Event": [
                      {
                        "Integration_Event_Reference": {
                          "ID__NORMALIZED": {
                            "WID": "df5291369b5101fc495f2fed70275004",
                            "Background_Process_Instance_ID": "INTEGRATION_ESB_INVOCATION-6-20023"
                          }
                        },
                        "Integration_Event_Data": {
                          "Integration_System_Reference": {
                            "ID__NORMALIZED": {
                              "WID": "d390457a170a017b4e0fccb25121a708",
                              "Integration_System_ID": "INT_STD_MaximoPersonSyncCollection/INT_STD_MaximoPersonSync/StartHere"
                            }
                          },
                          "Process_Description": "INT_STD_MaximoPersonSync",
                          "Initiated_DateTime": "2020-10-05T15:44:32.618Z",
                          "Integration_Response_Message": "Integration Completed.",
                          "Completed_DateTime": "2020-10-05T15:44:42.993Z",
                          "Initiated_By_System_Account_Reference": {
                            "ID__NORMALIZED": {
                              "WID": "3ebe69275f2a41979f43a04d5a61cab3",
                              "System_User_ID": "lmcneil",
                              "WorkdayUserName": "lmcneil"
                            }
                          },
                          "Percent_Complete": "1",
                          "Integration_Runtime_Parameter_Data": [
                            {
                              "Launch_Configurable_Name": "INT_STD_MaximoPersonSyncCollection/INT_STD_MaximoPersonSync/StartHere",
                              "Parameter_Name": [
                                {
                                  "$attributes": {
                                    "Label": "Integration Event"
                                  },
                                  "$value": "Text"
                                }
                              ]
                            }
                          ]
                        },
                        "Background_Process_Instance_Data": {
                          "Background_Process_Instance_Status_Reference": {
                            "ID__NORMALIZED": {
                              "WID": "d8b0bcd8446c11de98360015c5e6daf6",
                              "Background_Process_Instance_Status_ID": "Completed"
                            }
                          },
                          "Parent_Event_Reference": {
                            "ID__NORMALIZED": {
                              "WID": "df5291369b51011ebb4aedec70274904"
                            }
                          },
                          "Background_Process_Message_Data": [
                            {
                              "Timestamp": "2020-10-05T15:44:39.600Z",
                              "Severity_Level_Reference": {
                                "ID__NORMALIZED": {
                                  "WID": "dc0f8382446c11de98360015c5e6daf6",
                                  "Message_Severity_Level": "INFO"
                                }
                              },
                              "Message_Summary": "Getting Worker Skills"
                            },
                            {
                              "Timestamp": "2020-10-05T15:44:41.645Z",
                              "Severity_Level_Reference": {
                                "ID__NORMALIZED": {
                                  "WID": "dc0f8382446c11de98360015c5e6daf6",
                                  "Message_Severity_Level": "INFO"
                                }
                              },
                              "Message_Summary": "Log File.htm"
                            },
                            {
                              "Timestamp": "2020-10-05T15:44:41.836Z",
                              "Severity_Level_Reference": {
                                "ID__NORMALIZED": {
                                  "WID": "dc0f8382446c11de98360015c5e6daf6",
                                  "Message_Severity_Level": "INFO"
                                }
                              },
                              "Message_Summary": "Worker.json"
                            }
                          ],
                          "Output_Document_Data": [
                            {
                              "Integration_Repository_Document_Reference": {
                                "ID__NORMALIZED": {
                                  "WID": "df5291369b51015e136111ef70275504",
                                  "Document_ID": "cloud/4b2a4c20-7669-4967-3154-1478336b2c7d"
                                }
                              },
                              "Integration_Repository_Document_Data": {
                                "$attributes": {
                                  "Document_ID": "cloud/4b2a4c20-7669-4967-3154-1478336b2c7d",
                                  "File_Name": "Worker.json"
                                },
                                "File_Size": "205177",
                                "Content_Type_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "d969a07a5d4410000f3d5750e4dd001c",
                                    "Content_Type_ID": "application/json"
                                  }
                                },
                                "Document_Type_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "dc72b65a446c11de98360015c5e6daf6",
                                    "Document_Type_ID": "TXT"
                                  }
                                },
                                "Expiration_Timestamp": "2021-04-03T15:44:41.000Z",
                                "Owner_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "3ebe69275f2a41979f43a04d5a61cab3",
                                    "System_User_ID": "lmcneil",
                                    "WorkdayUserName": "lmcneil"
                                  }
                                },
                                "Document_Tag_Reference": [
                                  {
                                    "ID__NORMALIZED": {
                                      "WID": "df3520a3ef69432bbd9f48ed808dbd18",
                                      "Workday_Document_Tag_Name": "Deliverable"
                                    }
                                  },
                                  {
                                    "ID__NORMALIZED": {
                                      "WID": "9730c01e758601f534187bc3ea21e308",
                                      "Document_Tag_Name": "Person"
                                    }
                                  }
                                ],
                                "Custom_Document_Tag": [
                                  "Person"
                                ]
                              }
                            },
                            {
                              "Integration_Repository_Document_Reference": {
                                "ID__NORMALIZED": {
                                  "WID": "df5291369b5101258d0406ef70275304",
                                  "Document_ID": "cloud/2b265e65-0064-4777-2b43-4a232b5a670c"
                                }
                              },
                              "Integration_Repository_Document_Data": {
                                "$attributes": {
                                  "Document_ID": "cloud/2b265e65-0064-4777-2b43-4a232b5a670c",
                                  "File_Name": "Log File.htm"
                                },
                                "File_Size": "17639",
                                "Content_Type_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "d9ae66b2446c11de98360015c5e6daf6",
                                    "Content_Type_ID": "text/html"
                                  }
                                },
                                "Document_Type_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "dc72b826446c11de98360015c5e6daf6",
                                    "Document_Type_ID": "HTML"
                                  }
                                },
                                "Expiration_Timestamp": "2020-10-12T15:44:41.000Z",
                                "Owner_Reference": {
                                  "ID__NORMALIZED": {
                                    "WID": "3ebe69275f2a41979f43a04d5a61cab3",
                                    "System_User_ID": "lmcneil",
                                    "WorkdayUserName": "lmcneil"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  Integration_Event:
                    type: array
                    items:
                      type: object
                      properties:
                        Integration_Event_Reference:
                          type: object
                          properties:
                            ID__NORMALIZED:
                              type: object
                              properties:
                                WID:
                                  type: string
                                Background_Process_Instance_ID:
                                  type: string
                        Integration_Event_Data:
                          type: object
                          properties:
                            Integration_System_Reference:
                              type: object
                              properties:
                                ID__NORMALIZED:
                                  type: object
                                  properties:
                                    WID:
                                      type: string
                                    Integration_System_ID:
                                      type: string
                            Process_Description:
                              type: string
                            Initiated_DateTime:
                              type: string
                            Integration_Response_Message:
                              type: string
                            Completed_DateTime:
                              type: string
                            Initiated_By_System_Account_Reference:
                              type: object
                              properties:
                                ID__NORMALIZED:
                                  type: object
                                  properties:
                                    WID:
                                      type: string
                                    System_User_ID:
                                      type: string
                                    WorkdayUserName:
                                      type: string
                            Percent_Complete:
                              type: string
                            Integration_Runtime_Parameter_Data:
                              type: array
                              items:
                                type: object
                                properties:
                                  Launch_Configurable_Name:
                                    type: string
                                  Parameter_Name:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        $attributes:
                                          type: object
                                          properties:
                                            Label:
                                              type: string
                                        $value:
                                          type: string
                        Background_Process_Instance_Data:
                          type: object
                          properties:
                            Background_Process_Instance_Status_Reference:
                              type: object
                              properties:
                                ID__NORMALIZED:
                                  type: object
                                  properties:
                                    WID:
                                      type: string
                                    Background_Process_Instance_Status_ID:
                                      type: string
                            Parent_Event_Reference:
                              type: object
                              properties:
                                ID__NORMALIZED:
                                  type: object
                                  properties:
                                    WID:
                                      type: string
                            Background_Process_Message_Data:
                              type: array
                              items:
                                type: object
                                properties:
                                  Timestamp:
                                    type: string
                                  Severity_Level_Reference:
                                    type: object
                                    properties:
                                      ID__NORMALIZED:
                                        type: object
                                        properties:
                                          WID:
                                            type: string
                                          Message_Severity_Level:
                                            type: string
                                  Message_Summary:
                                    type: string
                            Output_Document_Data:
                              type: array
                              items:
                                type: object
                                properties:
                                  Integration_Repository_Document_Reference:
                                    type: object
                                    properties:
                                      ID__NORMALIZED:
                                        type: object
                                        properties:
                                          WID:
                                            type: string
                                          Document_ID:
                                            type: string
                                  Integration_Repository_Document_Data:
                                    type: object
                                    properties:
                                      $attributes:
                                        type: object
                                        properties:
                                          Document_ID:
                                            type: string
                                          File_Name:
                                            type: string
                                      File_Size:
                                        type: string
                                      Content_Type_Reference:
                                        type: object
                                        properties:
                                          ID__NORMALIZED:
                                            type: object
                                            properties:
                                              WID:
                                                type: string
                                              Content_Type_ID:
                                                type: string
                                      Document_Type_Reference:
                                        type: object
                                        properties:
                                          ID__NORMALIZED:
                                            type: object
                                            properties:
                                              WID:
                                                type: string
                                              Document_Type_ID:
                                                type: string
                                      Expiration_Timestamp:
                                        type: string
                                      Owner_Reference:
                                        type: object
                                        properties:
                                          ID__NORMALIZED:
                                            type: object
                                            properties:
                                              WID:
                                                type: string
                                              System_User_ID:
                                                type: string
                                              WorkdayUserName:
                                                type: string
                                      Document_Tag_Reference:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            ID__NORMALIZED:
                                              type: object
                                              properties:
                                                WID:
                                                  type: string
                                                Workday_Document_Tag_Name:
                                                  type: string
                                                Document_Tag_Name:
                                                  type: string
                                      Custom_Document_Tag:
                                        type: array
                                        items:
                                          type: string
                title: Parsed JSON
          - for-each:
              name: For each
              assembly:
                $ref: '#/integration/assemblies/assembly-2'
              source:
                expression: >-
                  $JSONParserParse.Integration_Event.Background_Process_Instance_Data.Output_Document_Data
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
              mode: sequential
              continue-on-error: true
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Foreach3
                    $ref: '#/block/For each/node-output/For each 3/response/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                customSchemas:
                  properties.`output`:
                    type: object
                    properties:
                      WorkersFound:
                        type: array
                        items:
                          type: object
                          properties: {}
                mappings: []
              display-name: Workday Output_Document_Data
    assembly-2:
      assembly:
        execute:
          - logging:
              name: Log 2
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: 'Log 2 '
          - if:
              name: If 2
              input:
                - variable: Foreachitem
                  $ref: '#/block/For each/current-item'
                - variable: Trigger
                  $ref: '#/trigger/payload'
                - variable: WorkdayGetIntegrationEvents
                  $ref: >-
                    #/node-output/Workday Get Integration
                    Events/response/payload
                - variable: JSONParserParse
                  $ref: '#/node-output/JSON Parser Parse/response/payload'
              branch:
                - condition:
                    '{{$Foreachitem.Integration_Repository_Document_Data."$attributes".File_Name}}': Worker.json
                  execute:
                    - logging:
                        name: Log 5
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                          mappings:
                            - logLevel:
                                template: Info
                            - logMessage:
                                template: >-
                                  Log 5 URL Plus Document ID
                                  https://wd2-impl-services1.workday.com/ccx/cc-blobitory/ibmsrv_dpt5/{{$Foreachitem.Integration_Repository_Document_Data."$attributes".Document_ID}}
                    - custom-action:
                        name: HTTP Invoke method
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        action: INVOKE
                        map:
                          mappings:
                            - method:
                                template: GET
                            - url:
                                template: >-
                                  https://wd2-impl-services1.workday.com/ccx/cc-blobitory/ibmsrv_dpt5/{{$Foreachitem.Integration_Repository_Document_Data."$attributes".Document_ID}}
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                    - logging:
                        name: Log 3
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                          mappings:
                            - logLevel:
                                template: Info
                            - logMessage:
                                template: 'Log 3 {{$HTTPInvokemethod.responseBody}}'
                          customSchemas:
                            properties.`customMessages`:
                              type: object
                              properties:
                                Log3:
                                  type: string
                    - parse:
                        name: JSON Parser Parse 2
                        parse-format: json
                        source:
                          template: '{{$HTTPInvokemethod.responseBody}}'
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                        sample-data: |-
                          {"worker": [{
                                "employeeID": 21918,
                                "employeeActive": true,
                                "firstName": "Graciela",
                                "lastName": "Mejia",
                                "gender": "",
                                "workAddressLine1": "123 Main Street",
                                "workMunicipality": "Juneau",
                                "workState": "Alaska",
                                "workPostalCode": "99801",
                                "workCountry": "99801",
                                "workPhone": "",
                                "workEmail": "",
                                "employeeStatus": "Active",
                                "hireDate": "2005-08-12",
                                "rehire": "false",
                                "businessTitle": "Drilling Technician",
                                "scheduledWeeklyHours": 40,
                                "company": "COMPANY-6-226",
                                "jobProfileID": "(CP) 103",
                                "jobProfileName": "Drilling Technician",
                                "managementLevel": "8_Individual_Contributor",
                                "businessSiteName": "Juneau",
                                "businessSite": "LOCATION-6-262",
                                "businessSiteAddressLine1": "123 Main Street",
                                "businessSiteMunicipality": "Juneau",
                                "businessSiteRegion": "Alaska",
                                "businessSitePostalCode": "99801",
                                "businessSiteCountry": "US",
                                "supervisorID": 21478,
                                "skillGroup": {"active_skills":       [
                                   "Journeyman Welder",
                                   "Machinist 2nd Class",
                                   "Mechanic 1st Class",
                                   "Pipefitter"
                                ]},
                                "qualifications":       {
                                   "compentencyAchievement":          [
                                                  {
                                         "compentencyName": "B1060",
                                         "competencyLevel": ""
                                      },
                                                  {
                                         "compentencyName": "I0350",
                                         "competencyLevel": "Extensive Experience"
                                      },
                                                  {
                                         "compentencyName": "I0480",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "I0700",
                                         "competencyLevel": "Extensive Experience"
                                      },
                                                  {
                                         "compentencyName": "M1010",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0120",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0150",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0160",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0170",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0210",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0320",
                                         "competencyLevel": "Extensive Experience"
                                      },
                                                  {
                                         "compentencyName": "TEN0325",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0380",
                                         "competencyLevel": "Working Knowledge"
                                      },
                                                  {
                                         "compentencyName": "TEN0390",
                                         "competencyLevel": "Extensive Experience"
                                      },
                                                  {
                                         "compentencyName": "TEN0610",
                                         "competencyLevel": "Basic Understanding"
                                      },
                                                  {
                                         "compentencyName": "TEN0690",
                                         "competencyLevel": "Extensive Experience"
                                      },
                                                  {
                                         "compentencyName": "TEN0700",
                                         "competencyLevel": "Working Knowledge"
                                      }
                                   ],
                                   "certificationAchievement":          [
                                                  {
                                         "certificationName": "First Aid Certification - American Red Cross",
                                         "certificationIssuer": "American Red Cross",
                                         "expirationDate": "2022-06-16"
                                      },
                                                  {
                                         "certificationName": "ISO 9001 - ISO",
                                         "certificationIssuer": "ISO",
                                         "expirationDate": ""
                                      },
                                                  {
                                         "certificationName": "Basic Offshore Safety Induction and Emergency Training (BOISET) - Safety Management Systems",
                                         "certificationIssuer": "Safety Management Systems",
                                         "expirationDate": ""
                                      }
                                   ]
                                }
                             },
                                {
                                "employeeID": 21919,
                                "employeeActive": true,
                                "firstName": "Alfonzo",
                                "lastName": "Mcpherson",
                                "gender": "",
                                "workAddressLine1": "123 Main Street",
                                "workMunicipality": "Juneau",
                                "workState": "Alaska",
                                "workPostalCode": "99801",
                                "workCountry": "99801",
                                "workPhone": "",
                                "workEmail": "",
                                "employeeStatus": "Active",
                                "hireDate": "2006-11-24",
                                "rehire": "false",
                                "businessTitle": "Drilling Technician",
                                "scheduledWeeklyHours": 40,
                                "company": "COMPANY-6-226",
                                "jobProfileID": "(CP) 103",
                                "jobProfileName": "Drilling Technician",
                                "managementLevel": "8_Individual_Contributor",
                                "businessSiteName": "Juneau",
                                "businessSite": "LOCATION-6-262",
                                "businessSiteAddressLine1": "123 Main Street",
                                "businessSiteMunicipality": "Juneau",
                                "businessSiteRegion": "Alaska",
                                "businessSitePostalCode": "99801",
                                "businessSiteCountry": "US",
                                "supervisorID": 21495,
                                "skillGroup": {},
                                "qualifications": {}
                             }
                                      ]}
                        output-schema:
                          $schema: 'http://json-schema.org/draft-04/schema#'
                          type: object
                          properties:
                            worker:
                              type: array
                              items:
                                type: object
                                properties:
                                  employeeID:
                                    type: number
                                  employeeActive:
                                    type: boolean
                                  firstName:
                                    type: string
                                  lastName:
                                    type: string
                                  gender:
                                    type: string
                                  workAddressLine1:
                                    type: string
                                  workMunicipality:
                                    type: string
                                  workState:
                                    type: string
                                  workPostalCode:
                                    type: string
                                  workCountry:
                                    type: string
                                  workPhone:
                                    type: string
                                  workEmail:
                                    type: string
                                  employeeStatus:
                                    type: string
                                  hireDate:
                                    type: string
                                  rehire:
                                    type: string
                                  businessTitle:
                                    type: string
                                  scheduledWeeklyHours:
                                    type: number
                                  company:
                                    type: string
                                  jobProfileID:
                                    type: string
                                  jobProfileName:
                                    type: string
                                  managementLevel:
                                    type: string
                                  businessSiteName:
                                    type: string
                                  businessSite:
                                    type: string
                                  businessSiteAddressLine1:
                                    type: string
                                  businessSiteMunicipality:
                                    type: string
                                  businessSiteRegion:
                                    type: string
                                  businessSitePostalCode:
                                    type: string
                                  businessSiteCountry:
                                    type: string
                                  supervisorID:
                                    type: number
                                  skillGroup:
                                    type: object
                                    properties:
                                      active_skills:
                                        type: array
                                        items:
                                          type: string
                                  qualifications:
                                    type: object
                                    properties:
                                      compentencyAchievement:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            compentencyName:
                                              type: string
                                            competencyLevel:
                                              type: string
                                      certificationAchievement:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            certificationName:
                                              type: string
                                            certificationIssuer:
                                              type: string
                                            expirationDate:
                                              type: string
                          title: Parsed JSON
                    - for-each:
                        name: For each 2
                        assembly:
                          $ref: '#/integration/assemblies/assembly-3'
                        source:
                          expression: '$JSONParserParse2.worker '
                          input:
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: JSONParserParse2
                              $ref: >-
                                #/block/If 2/node-output/JSON Parser Parse
                                2/response/payload
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                        mode: sequential
                        continue-on-error: true
                        map:
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Foreach2item
                              $ref: '#/block/For each 2/current-item'
                            - variable: Foreachitem
                              $ref: '#/block/For each/current-item'
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: Setvariable
                              $ref: >-
                                #/block/For each 2/node-output/Set
                                variable/response/payload
                            - variable: IBMMaximoUpdateorcreateuser
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create user/response/payload
                            - variable: IBMMaximoUpdateorcreateuserMetadata
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create user/response
                            - variable: IBMMaximoUpdateorcreatelabor
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create labor/response/payload
                            - variable: IBMMaximoUpdateorcreatelaborMetadata
                              $ref: >-
                                #/block/For each 2/node-output/IBM Maximo Update
                                or create labor/response
                            - variable: HTTPInvokemethod
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response/payload
                            - variable: HTTPInvokemethodMetadata
                              $ref: >-
                                #/block/If 2/node-output/HTTP Invoke
                                method/response
                            - variable: JSONParserParse2
                              $ref: >-
                                #/block/If 2/node-output/JSON Parser Parse
                                2/response/payload
                            - variable: WorkdayGetIntegrationEvents
                              $ref: >-
                                #/node-output/Workday Get Integration
                                Events/response/payload
                            - variable: JSONParserParse
                              $ref: '#/node-output/JSON Parser Parse/response/payload'
                          customSchemas:
                            properties.`output`:
                              type: object
                              properties:
                                Workers_created:
                                  type: array
                                  items:
                                    type: object
                                    properties: {}
                          mappings:
                            - output:
                                mappings:
                                  - Workers_created:
                                      expression: >-
                                        $append($Setvariable.variable.worker,
                                        [])
                        display-name: JSON Parser worker
              else:
                execute:
                  - logging:
                      name: Log 4
                      map:
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Foreachitem
                            $ref: '#/block/For each/current-item'
                          - variable: Trigger
                            $ref: '#/trigger/payload'
                          - variable: WorkdayGetIntegrationEvents
                            $ref: >-
                              #/node-output/Workday Get Integration
                              Events/response/payload
                        mappings:
                          - logLevel:
                              template: Info
                          - logMessage:
                              template: >-
                                Log 4
                                Filename={{$Foreachitem.Integration_Repository_Document_Data."$attributes".File_Name}}
              output-schema: {}
    assembly-3:
      assembly:
        execute:
          - logging:
              name: Log 8
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: Labor being added to maximo
          - set-variable:
              name: Set variable
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      worker:
                        type: object
                        properties:
                          employee_id:
                            type: number
                          first_name:
                            type: string
                          last_name:
                            type: string
                      JobProfile:
                        type: object
                        properties:
                          JobProfileName:
                            type: string
                          JobProfileID:
                            type: string
                mappings:
                  - variable:
                      mappings:
                        - JobProfile:
                            mappings:
                              - JobProfileID:
                                  template: '{{$Foreach2item.jobProfileID}}'
                              - JobProfileName:
                                  template: '{{$Foreach2item.jobProfileName}}'
                        - worker:
                            mappings:
                              - employee_id:
                                  expression: '$Foreach2item.employeeID '
                              - first_name:
                                  template: '{{$Foreach2item.firstName}}'
                              - last_name:
                                  template: '{{$Foreach2item.lastName}}'
          - logging:
              name: Log
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        Employee ID{{$Foreach2item.employeeID}} Job Profile Name
                        {{$Setvariable.variable.JobProfile.JobProfileName}}
          - upsert-action:
              name: IBM Maximo Update or create user
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
              map:
                mappings:
                  - firstname:
                      template: '{{$Foreach2item.firstName}}'
                  - lastname:
                      template: '{{$Foreach2item.lastName}}'
                  - primaryemail:
                      template: '{{$Foreach2item.workEmail}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
              filter:
                where:
                  personid: '{{$Foreach2item.employeeID}}'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
          - logging:
              name: Log 6
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: IBMMaximoUpdateorcreateuser
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response/payload
                  - variable: IBMMaximoUpdateorcreateuserMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: >-
                        Created Maximo Person {{$Foreach2item.employeeID}} Skill
                        Group{{$Foreach2item.skillGroup}} Create Craft next with
                        Profile Name
                        {{$Setvariable.variable.JobProfile[0].JobProfileName}}
          - upsert-action:
              name: IBM Maximo Update or create labor
              target:
                $ref: '#/integration/action-interfaces/action-interface-4'
              map:
                mappings:
                  - laborcraftrate:
                      foreach:
                        input: '$Setvariable.variable.JobProfile[0] '
                        iterator: laborcraftrateItem
                        mappings:
                          - craft:
                              template: '{{$laborcraftrateItem.JobProfileName}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: IBMMaximoUpdateorcreateuser
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response/payload
                  - variable: IBMMaximoUpdateorcreateuserMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
              filter:
                where:
                  and:
                    - laborcode: '{{$Foreach2item.employeeID}}'
                    - orgid: EAGLENA
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: IBMMaximoUpdateorcreateuser
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response/payload
                  - variable: IBMMaximoUpdateorcreateuserMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
          - logging:
              name: Log 7
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Foreach2item
                    $ref: '#/block/For each 2/current-item'
                  - variable: Foreachitem
                    $ref: '#/block/For each/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: >-
                      #/block/For each 2/node-output/Set
                      variable/response/payload
                  - variable: IBMMaximoUpdateorcreateuser
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response/payload
                  - variable: IBMMaximoUpdateorcreateuserMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      user/response
                  - variable: IBMMaximoUpdateorcreatelabor
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      labor/response/payload
                  - variable: IBMMaximoUpdateorcreatelaborMetadata
                    $ref: >-
                      #/block/For each 2/node-output/IBM Maximo Update or create
                      labor/response
                  - variable: HTTPInvokemethod
                    $ref: >-
                      #/block/If 2/node-output/HTTP Invoke
                      method/response/payload
                  - variable: HTTPInvokemethodMetadata
                    $ref: '#/block/If 2/node-output/HTTP Invoke method/response'
                  - variable: JSONParserParse2
                    $ref: >-
                      #/block/If 2/node-output/JSON Parser Parse
                      2/response/payload
                  - variable: WorkdayGetIntegrationEvents
                    $ref: >-
                      #/node-output/Workday Get Integration
                      Events/response/payload
                  - variable: JSONParserParse
                    $ref: '#/node-output/JSON Parser Parse/response/payload'
                mappings:
                  - logLevel:
                      template: Info
                  - logMessage:
                      template: Finished Create Labor
  name: GetIntegrationEventsCF_1
models: {}
